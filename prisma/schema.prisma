// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  password String?
  bio String?
  avatar String?
  resume String?
  resumeDescription String?

  projects Project[]
  techstacks Techstack[]
  certificates Certificate[]
  educations Education[]
}

model Project {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  pname String?
  description String?
  link String?
  repositoryLink String?
  image String?
  createdAt DateTime @default(now())
  userId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  techstacks Techstack[]
}

model Techstack{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  techs String[]
  userId String @db.ObjectId
  projectId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

}

model Certificate{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  verifyLink String
  icon String?
  createdAt DateTime @default(now())
  userId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Education{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  school String
  userId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
